syntax = "proto3";


//option java_multiple_files = true;
//option java_package = "com.ycg.sbgrpc.grpc.mycanal";
option java_outer_classname = "MyCanalProto";
option go_package = "api/mycanal";

package mycanal;

// 订阅表格请求
message SubscribeTableRequest {
  // 表名正则表达式 dev_db.node*
  string tableNameRegex = 1;
}

enum CanalEventType {
  UNKNOWN = 0; // 未知事件
  INSERT = 1; // 插入事件
  UPDATE = 2; // 更新事件
  DELETE = 3; // 删除事件
}

// 事件表格行回复
message EventTableRowReply {
  // 事件类型
  CanalEventType eventType = 1;
  // 表结构
  TableStructReply table = 2;
  // 插入信息
  repeated EventInsertInfoReply saveData = 3;
  // 删除信息
  repeated EventDeleteInfoReply deleteData = 4;
  // 修改信息
  repeated EventUpdateInfoReply editData = 5;
}

// 表结构信息
message TableStructReply{
  // 数据库名称
  string schema = 1;
  // 表名
  string table = 2;
  // 字段信息
  repeated ColumnInfoReply columns = 3;
}

// 字段信息
message ColumnInfoReply {
  // 字段名
  string columnName = 1;
  // 字段类型
  string columnType = 2;
}

// 插入信息
message EventInsertInfoReply{
  map<string, string> rowData = 1;
}

// 更新信息
message EventUpdateInfoReply{
  // key: 字段名, value: 字段值
  map<string, string> unChangeRowData = 1;
  // 变更字段值
  map<string, ColumnValueReply> editColumns = 2; // 字段信息
}


// 字段值变更信息
message ColumnValueReply {
  // 修改前
  string beforeValue = 1;
  // 修改后
  string afterValue = 2;
}

// 删除信息
message EventDeleteInfoReply{
  // 删除的行数据
  map<string, string> rowData = 1;
}


// gRPC服务定义
service MyCanalService {
  // 服务端流式rpc
  rpc subscribeRegexTable(SubscribeTableRequest) returns (stream EventTableRowReply);
}

// protoc --go-grpc_out=./rules/mgrpc --go_out=./rules/mgrpc ./rules/mgrpc/proto/mycanal.proto